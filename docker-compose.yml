version: '3.1'

services:

  dock-mongo:
    image: mongo
    restart: always
    container_name: dock-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}
      MONGO_INITDB_DATABASE: "team_meet"
      MONGO_USER: ${MONGO_USER}
      MONGO_PASS: ${MONGO_PASS}
    volumes:
      # - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./dock_mongo/dbdata:/data/db:rw
    env_file:
      - .env
    ports:
      - 27017:27017
      
    networks: 
      - dock_schedule-backend
      
    command: bash -c "adduser ${MONGO_USER} && rm -rf /tmp/mongod*.sock && chown -R ${MONGO_USER}:${MONGO_USER} /data/db/ && mkdir -p /data/logs && chown -R ${MONGO_USER}:${MONGO_USER} /data/logs && mongod --quiet --logpath /data/logs/mongod.log && chown -R ${MONGO_USER}:${MONGO_USER} /data/logs/ && service mongod restart"
    

  # mongo-express:
  #   image: mongo-express
  #   container_name: dock-mongo_express
  #   restart: unless-stopped
  #   env_file:
  #     - .env
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASS}
  #     ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_USER}
  #     ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_PASS}
  #     ME_CONFIG_MONGODB_PORT: 27017
  #     # ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USER}:${MONGO_PASS}@dock-mongo:27017/
  #     ME_CONFIG_MONGODB_SERVER: dock-mongo
  #   depends_on:
  #     - dock-mongo
  #   volumes:
  #     - ./dock_mongo/dbdata:/data/db
  #   networks: 
  #     - dock_schedule-backend

  dock_schedule: 
    build: dock_schedule/
    container_name: dock_schedule
    # ports:
    #   - 8080:8080
    restart: on-failure
    networks: 
      - dock_schedule-frontend
      - dock_schedule-backend
    environment:
      - FLASK_APP=/src/schedule.py

  dock_proxy:
    image: nginx:latest
    container_name: dock_proxy
    ports:
      - 80:80
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - dock_schedule-frontend
    restart: on-failure
    depends_on:
      - dock_schedule

    
networks:
  dock_schedule-backend:
    driver: bridge
  dock_schedule-frontend:
    driver: bridge